name: Build + Sonar 
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    container:
      image: matrim/cmake-examples:3.5.1
    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Install sonar-scanner and build-wrapper
        uses: SonarSource/sonarcloud-github-c-cpp@v1

      - name: Prepare Sonar Build Wrapper dir
        run: |
          mkdir -p ${{github.workspace}}/${{env.BUILD_WRAPPER_OUT_DIR}}
          echo "BUILD_WRAPPER_OUT_DIR_ABSOLUTE=${{ github.workspace }}/${{ env.BUILD_WRAPPER_OUT_DIR }}" >> $GITHUB_ENV

      - name: Run build-wrapper on each subproject
        run: |
          mkdir -p build
          cmake --version
          # Find all directories containing a CMakeLists.txt and run build-wrapper for each
          find . -name CMakeLists.txt -exec dirname {} \; | while read -r dir; do
            clean_dir=$(echo "$dir" | sed 's|^\./||')
            echo "Building in $clean_dir"
            mkdir -p "${{ env.BUILD_WRAPPER_OUT_DIR_ABSOLUTE }}/$clean_dir"
            cmake -S "$dir" -B "build/$clean_dir"
            build-wrapper-linux-x86-64 --out-dir "${{ env.BUILD_WRAPPER_OUT_DIR_ABSOLUTE }}/$dir" cmake --build "build/$clean_dir" --config Release
          done

      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} 
        run: |
          sonar-scanner --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}"git